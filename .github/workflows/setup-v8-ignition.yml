name: V8 Interpreter Testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test-v8:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Bash and Core Utilities are Installed
        run: |
          sudo apt-get update
          sudo apt-get install -y bash coreutils
          echo "✅ Installed Bash and Core Utilities."

          if [ -x /usr/bin/bash ]; then
            echo "✅ Bash is available at /usr/bin/bash"
          else
            echo "❌ Bash not found!"
            exit 1
          fi

          # Remove sleep command dependency check as it's no longer needed

          echo "PATH=/usr/bin:$PATH" >> $GITHUB_ENV
        shell: bash

      - name: Clone depot_tools
        run: git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        shell: bash

      - name: Add depot_tools to PATH
        run: |
          echo "${{ github.workspace }}/depot_tools" >> $GITHUB_PATH
          echo "✅ Added depot_tools to PATH."
        shell: bash

      - name: Fetch V8 with Retry
        run: |
          retry_count=0
          max_retries=3
          
          until [ $retry_count -ge $max_retries ]
          do
            fetch v8 && break
            retry_count=$((retry_count+1))
            echo "❌ Attempt $retry_count/$max_retries failed! Retrying..."
          done
          
          if [ $retry_count -ge $max_retries ]; then
            echo "❌ Maximum attempts reached. Exiting..."
            exit 1
          fi
        shell: bash

      - name: Sync V8 Dependencies
        working-directory: v8
        run: |
          retry_count=0
          max_retries=3
          
          until [ $retry_count -ge $max_retries ]
          do
            gclient sync && break
            retry_count=$((retry_count+1))
            echo "❌ Attempt $retry_count/$max_retries failed! Retrying..."
          done
          
          if [ $retry_count -ge $max_retries ]; then
            echo "❌ Maximum attempts reached. Exiting..."
            exit 1
          fi
          
          echo "✅ V8 dependencies synchronized."
        shell: bash

      - name: Install V8 Build Dependencies
        working-directory: v8
        run: |
          sudo ./build/install-build-deps.sh --no-prompt
          echo "✅ Installed V8 build dependencies."
        shell: bash

      - name: Build V8
        working-directory: v8
        run: |
          gn gen out.gn/x64.release --args='is_debug=false target_cpu="x64"'
          ninja -C out.gn/x64.release d8 cctest
          echo "✅ V8 built successfully."
        shell: bash

      - name: Run cctest Suite
        working-directory: v8
        run: |
          ./out.gn/x64.release/cctest --gtest_filter=Interpreter*
          echo "✅ cctest suite completed."
        shell: bash

      - name: Run Ignition Tests
        working-directory: v8
        run: |
          if [ -d "test/interpreter" ]; then
            ./tools/run-tests.py --outdir=out.gn/x64.release interpreter/
            echo "✅ Interpreter tests completed."
          else
            echo "Warning: Interpreter test directory not found. Checking for alternative location..."
            if [ -d "test/ignition" ]; then
              ./tools/run-tests.py --outdir=out.gn/x64.release ignition/
              echo "✅ Ignition tests completed."
            else
              echo "❌ Interpreter/Ignition test suite not found!"
              exit 1
            fi
          fi
        shell: bash

      - name: Run mjsunit Tests
        working-directory: v8
        run: |
          ./tools/run-tests.py --outdir=out.gn/x64.release mjsunit/
          echo "✅ mjsunit tests completed."
        shell: bash

      - name: Run Test262 Suite
        working-directory: v8
        run: |
          ./tools/run-tests.py --outdir=out.gn/x64.release --download-data test262
          ./tools/run-tests.py --outdir=out.gn/x64.release test262
          echo "✅ Test262 suite completed."
        shell: bash

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: v8-test-results
          path: v8/out.gn/x64.release/test-results.xml
          if-no-files-found: warn
